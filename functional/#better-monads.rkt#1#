#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 54 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 3660 0 26 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"for-syntax"
0 0 4 3 1 #" "
0 0 14 3 12 #"syntax/parse"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 10 #"for-syntax"
0 0 4 3 1 #" "
0 0 14 3 12 #"racket/match"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 12 #"racket/match"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 12 #"syntax/parse"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"zero"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"plus"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 14 3 4 #"plus"
0 0 4 3 1 #" "
0 0 14 3 4 #"zero"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 14 3 4 #"zero"
0 0 4 3 1 #" "
0 0 14 3 4 #"plus"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-for-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"sym-append"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"foldl"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"it"
0 0 4 3 1 #" "
0 0 14 3 2 #"ac"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 14 3 2 #"ac"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 14 3 2 #"it"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"syms"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"with-monad"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"syntax-parse"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 14 3 3 #"stx"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 10 #"with-monad"
0 0 4 3 1 #" "
0 0 14 3 15 #"monad-expr:expr"
0 0 4 3 1 #" "
0 0 14 3 9 #"body:expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 11 #"with-syntax"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 10 #"monad-expr"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 10 #"monad-expr"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bind"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 10 #"monad-expr"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"return"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"zero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 10 #"monad-expr"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"zero"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"plus"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 10 #"monad-expr"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"plus"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"syntax"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad-expr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"monad-bind"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"monad-return"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"plus"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"monad-plus"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"zero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"monad-zero"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 6 #")))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"with-monad/location"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"syntax-parse"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 14 3 3 #"stx"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 10 #"with-monad"
0 0 4 3 1 #" "
0 0 14 3 15 #"monad-expr:expr"
0 0 4 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 4 3 1 #" "
0 0 14 3 9 #"body:expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 11 #"with-syntax"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 6 #"lexeme"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 6 #"lexeme"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bind"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 6 #"lexeme"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"return"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"zero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 6 #"lexeme"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"zero"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"plus"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 6 #"lexeme"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"plus"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"syntax"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad-expr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"monad-bind"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"monad-return"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"plus"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"monad-plus"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"zero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"monad-zero"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 6 #")))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-syntax-class"
0 0 4 3 1 #" "
0 0 14 3 6 #"binder"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"pattern:expr"
0 0 4 3 1 #" "
0 0 14 3 10 #"value:expr"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-syntax-class"
0 0 4 3 1 #" "
0 0 14 3 13 #"simple-binder"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"pattern:expr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"is:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"value:expr"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-syntax-class"
0 0 4 3 1 #" "
0 0 14 3 16 #"specified-binder"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"pattern:expr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 3 1 #" "
0 0 14 3 10 #"value:expr"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-syntax-class"
0 0 4 3 1 #" "
0 0 14 3 14 #"general-binder"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 14 3 13 #"binder:binder"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 14 3 20 #"binder:simple-binder"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"syntax-parse"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 14 3 3 #"stx"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 13 #"binder:binder"
0 0 4 3 1 #" "
0 0 14 3 29 #"general-binder:general-binder"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 14 3 9 #"body:expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 19 #"with-monad/location"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 6 #"binder"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"(("
0 0 14 3 10 #"monad-bind"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 12 #"binder.value"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 22 3 1 #"["
0 0 14 3 14 #"binder.pattern"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 22 3 1 #"("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 14 #"general-binder"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 8 #")])))))]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 27 #"simple-binder:simple-binder"
0 0 4 3 1 #" "
0 0 14 3 29 #"general-binder:general-binder"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 14 3 9 #"body:expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 19 #"simple-binder.value"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 21 #"simple-binder.pattern"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 14 #"general-binder"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 4 #")])]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 3 1 #" "
0 0 22 3 2 #"[]"
0 0 4 3 1 #" "
0 0 14 3 9 #"body:expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 19 #"with-monad/location"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 29 #"general-binder:general-binder"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 4 3 1 #" "
0 0 14 3 9 #"body:expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 14 #"general-binder"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-syntax-class"
0 0 4 3 1 #" "
0 0 14 3 7 #"binding"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"pattern:expr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 2 #"<-"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"value:expr"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-syntax-class"
0 0 4 3 1 #" "
0 0 14 3 7 #"letting"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"pattern:expr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"is:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"value:expr"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-syntax-class"
0 0 4 3 1 #" "
0 0 14 3 20 #"binding/letting/expr"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 14 3 9 #"b:binding"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 14 3 9 #"l:letting"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"pattern"
0 0 4 3 1 #" "
0 0 14 3 6 #"e:expr"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"syntax-parse"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 14 3 3 #"stx"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 14 3 9 #"b:binding"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 14 3 25 #"rest:binding/letting/expr"
0 0 4 3 1 #" "
0 0 14 3 4 #"...+"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 12 #"binding-case"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 19 #"with-monad/location"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 10 #"monad-bind"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 7 #"b.value"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"["
0 0 14 3 9 #"b.pattern"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 8 #")])))))]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 14 3 9 #"l:letting"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 14 3 25 #"rest:binding/letting/expr"
0 0 4 3 1 #" "
0 0 14 3 4 #"...+"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 7 #"l.value"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 9 #"l.pattern"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 20 3 1 #"'"
0 0 14 3 12 #"letting-case"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 4 #")])]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 14 3 6 #"e:expr"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 14 3 25 #"rest:binding/letting/expr"
0 0 4 3 1 #" "
0 0 14 3 4 #"...+"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 16 #"expression-case+"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 19 #"with-monad/location"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 10 #"monad-bind"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 1 #"e"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 6 #")))))]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 14 3 6 #"e:expr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 19 #"with-monad/location"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 15 #"expression-case"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 14 3 6 #"e:expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"list-bind"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"acc"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"()]"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"["
0 0 14 3 1 #"v"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 2 #"el"
0 0 4 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"el"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 5 #"list?"
0 0 4 3 1 #" "
0 0 14 3 5 #"items"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 4 3 1 #" "
0 0 14 3 5 #"items"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 14 3 4 #"rest"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"["
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 5 #"))])]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"["
0 0 14 3 1 #"o"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 6 #"))])))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"list-return"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"list-plus"
0 0 4 3 1 #" "
0 0 14 3 6 #"append"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"list-zero"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"the-list-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 9 #"list-bind"
0 0 4 3 1 #" "
0 0 14 3 11 #"list-return"
0 0 4 3 1 #" "
0 0 14 3 9 #"list-plus"
0 0 4 3 1 #" "
0 0 14 3 9 #"list-zero"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 18 #"the-identity-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 4 #"bind"
0 0 4 3 1 #" "
0 0 14 3 6 #"return"
0 0 4 3 1 #" "
0 0 14 3 4 #"plus"
0 0 4 3 1 #" "
0 0 14 3 4 #"zero"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 13 #"state-doublet"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"proper"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 11 #"state-error"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"message"
0 0 4 3 1 #" "
0 0 14 3 10 #"last-state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 10 #"state-fail"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"state-return"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"state-doublet"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"state-promote"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 10 #"procedure?"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 14 #"state-doublet?"
0 0 4 3 1 #" "
0 0 14 3 7 #"doublet"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"doublet"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-error?"
0 0 4 3 1 #" "
0 0 14 3 5 #"error"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"error"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 11 #"state-fail?"
0 0 4 3 1 #" "
0 0 14 3 4 #"fail"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"fail"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"state-doublet"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 22 #"state-promote-producer"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 10 #"procedure?"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"thing"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 14 #"state-doublet?"
0 0 4 3 1 #" "
0 0 14 3 7 #"doublet"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"doublet"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-error?"
0 0 4 3 1 #" "
0 0 14 3 5 #"error"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"error"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 11 #"state-fail?"
0 0 4 3 1 #" "
0 0 14 3 4 #"fail"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"fail"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"state-return"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"state-bind"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-funish"
0 0 4 3 1 #" "
0 0 14 3 20 #"state-fun<proper>ish"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 9 #"state-fun"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"state-promote"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-funish"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 17 #"state-fun<proper>"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 22 #"state-promote-producer"
0 0 4 3 1 #" "
0 0 14 3 20 #"state-fun<proper>ish"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-error?"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 11 #"state-fail?"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 5 #"state"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"state-fun"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 2 #"[("
0 0 14 3 13 #"state-doublet"
0 0 4 3 1 #" "
0 0 14 3 6 #"proper"
0 0 4 3 1 #" "
0 0 14 3 9 #"new-state"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 17 #"state-fun<proper>"
0 0 4 3 1 #" "
0 0 14 3 6 #"proper"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 9 #"new-state"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-error?"
0 0 4 3 1 #" "
0 0 14 3 9 #"error-val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 14 3 9 #"error-val"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 11 #"state-fail?"
0 0 4 3 1 #" "
0 0 14 3 4 #"fail"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 14 3 4 #"fail"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 17 #"state-fun<proper>"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 4 #")])]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"state-plus"
0 0 4 3 1 #" "
0 0 14 3 6 #"stish1"
0 0 4 3 1 #" "
0 0 14 3 6 #"stish2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 4 #"stf1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"state-promote"
0 0 4 3 1 #" "
0 0 14 3 6 #"stish1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"stf2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"state-promote"
0 0 4 3 1 #" "
0 0 14 3 6 #"stish2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"stf1"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 13 #"state-doublet"
0 0 4 3 1 #" "
0 0 14 3 6 #"proper"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"stf2"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"stf2"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 22 3 6 #")]))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"state-zero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"state-error"
0 0 4 3 1 #" "
0 0 19 3 14 #"\"State error.\""
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"the-state-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 10 #"state-bind"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-return"
0 0 4 3 1 #" "
0 0 14 3 10 #"state-plus"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"positive-integer?"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"integer?"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"gen-ids"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 11 #"seed-syntax"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"gen-ids"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 11 #"seed-syntax"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 4 #"())]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"["
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 17 #"positive-integer?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 7 #"gen-ids"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 14 3 11 #"seed-syntax"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 14 3 11 #"seed-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 4 3 1 #" "
0 0 19 3 10 #"\"lift-id-\""
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 7 #"))])]))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"ids->pairs-syntax"
0 0 4 3 1 #" "
0 0 14 3 3 #"ids"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"ids"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 14 3 3 #"ids"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"syntax-parse"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 14 3 3 #"stx"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 14 3 13 #"n-args:number"
0 0 4 3 1 #" "
0 0 14 3 6 #"f:expr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"~datum"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad:expr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"ids"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"gen-ids"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"syntax->datum"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 6 #"n-args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 1 #"f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 11 #"with-syntax"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 3 #"((("
0 0 14 3 4 #"pair"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"ids->pairs-syntax"
0 0 4 3 1 #" "
0 0 14 3 3 #"ids"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 2 #"(("
0 0 14 3 2 #"id"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"ids"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"ids"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"id"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"pair"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"monad-return"
0 0 4 3 1 #" "
0 0 14 3 8 #"monad-id"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 8 #")))))))]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 14 3 13 #"n-args:number"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 11 #"with-syntax"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"(("
0 0 14 3 13 #"current-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"current-monad"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 14 3 6 #"n-args"
0 0 4 3 1 #" "
0 0 14 3 6 #"f:expr"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-monad"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift1"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift2"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift3"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift4"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift5"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"5"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift6"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"6"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift7"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"7"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift8"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"8"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lift9"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift10"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift11"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"11"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift12"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"12"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift13"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"13"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift14"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"14"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift15"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"15"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift16"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift17"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"17"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift18"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"18"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift19"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"19"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lift20"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"20"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"into:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"lift"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift3"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift4"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift5"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"5"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift6"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"6"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift7"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"7"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift8"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"8"
0 0 4 3 1 #" "
0 0 14 3 5 #"lift9"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 1 #"9"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift10"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift11"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"11"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift12"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"12"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift13"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"13"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift14"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"14"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift15"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"15"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift16"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift17"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"17"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift18"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"18"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift19"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 20 3 2 #"19"
0 0 4 3 1 #" "
0 0 14 3 6 #"lift20"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 4 #"lift"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 10 #"lift-table"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"the-syntax-monad<stx>"
0 0 4 3 1 #" "
0 0 14 3 13 #"source-syntax"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 13 #"syntax-return"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"item"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 14 3 13 #"source-syntax"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-bind"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"stx"
0 0 4 3 1 #" "
0 0 14 3 10 #"stx<datum>"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 5 #"datum"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"syntax->datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 10 #"stx<datum>"
0 0 4 3 1 #" "
0 0 14 3 5 #"datum"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 11 #"syntax-bind"
0 0 4 3 1 #" "
0 0 14 3 13 #"syntax-return"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"syntax-return"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 5 #"where"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 4 3 1 #" "
0 0 14 3 4 #"item"
0 0 4 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-bind"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 4 3 1 #" "
0 0 14 3 6 #"stx<p>"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"syntax->datum"
0 0 4 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"stx<p>"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 16 #"the-syntax-monad"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 11 #"syntax-bind"
0 0 4 3 1 #" "
0 0 14 3 13 #"syntax-return"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"zip"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 5 #"lists"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 5 #"lists"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"mapm"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 13 #"lists-of-vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 3 #"acc"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 3 #"zip"
0 0 4 3 1 #" "
0 0 14 3 13 #"lists-of-vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"monad-return"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 2 #"hd"
0 0 4 3 1 #" "
0 0 14 3 2 #"tl"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 2 #"(("
0 0 14 3 1 #"v"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"hd"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"loop"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 14 3 2 #"tl"
0 0 22 3 6 #"))])))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"foldlm"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 4 #"init"
0 0 4 3 1 #" "
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 4 #"list"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 12 #"monad-return"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"init"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 2 #"hd"
0 0 4 3 1 #" "
0 0 14 3 2 #"tl"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 3 #"in:"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"(("
0 0 14 3 1 #"v"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"hd"
0 0 4 3 1 #" "
0 0 14 3 4 #"init"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 6 #"foldlm"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"v"
0 0 4 3 1 #" "
0 0 14 3 2 #"tl"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"reducem"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"foldlm"
0 0 4 3 1 #" "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"list"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"list"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 14 3 5 #"mlet*"
0 0 4 3 1 #" "
0 0 14 3 10 #"with-monad"
0 0 4 3 1 #" "
0 0 14 3 18 #"the-identity-monad"
0 0 4 3 1 #" "
0 0 14 3 14 #"the-list-monad"
0 0 4 3 1 #" "
0 0 14 3 15 #"the-state-monad"
0 0 4 3 1 #" "
0 0 14 3 13 #"state-doublet"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"monad"
0 0 4 3 1 #" "
0 0 14 3 6 #"monad?"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad-bind"
0 0 4 3 1 #" "
0 0 14 3 12 #"monad-return"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad-plus"
0 0 4 3 1 #" "
0 0 14 3 10 #"monad-zero"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 9 #"list-bind"
0 0 4 3 1 #" "
0 0 14 3 11 #"list-return"
0 0 4 3 1 #" "
0 0 14 3 10 #"state-bind"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-return"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 10 #"state-plus"
0 0 4 3 1 #" "
0 0 14 3 10 #"state-zero"
0 0 4 3 1 #" "
0 0 14 3 9 #"list-plus"
0 0 4 3 1 #" "
0 0 14 3 9 #"list-zero"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 11 #"state-error"
0 0 4 3 1 #" "
0 0 14 3 12 #"state-error?"
0 0 4 3 1 #" "
0 0 14 3 19 #"state-error-message"
0 0 4 3 1 #" "
0 0 14 3 22 #"state-error-last-state"
0 0 4 3 1 #" "
0 0 14 3 10 #"state-fail"
0 0 4 3 1 #" "
0 0 14 3 11 #"state-fail?"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 11 #"static-lift"
0 0 4 3 1 #" "
0 0 14 3 21 #"the-syntax-monad<stx>"
0 0 4 3 1 #" "
0 0 14 3 4 #"lift"
0 0 4 3 1 #" "
0 0 14 3 16 #"the-syntax-monad"
0 0 4 3 1 #" "
0 0 14 3 4 #"mapm"
0 0 4 3 1 #" "
0 0 14 3 6 #"foldlm"
0 0 4 3 1 #" "
0 0 14 3 10 #"monadic-do"
0 0 4 3 1 #" "
0 0 14 3 7 #"reducem"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift1"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift2"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift3"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift4"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift5"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift6"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift7"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift8"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 5 #"lift9"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift10"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift11"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift12"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift13"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift14"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift15"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift16"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift17"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift18"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift19"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"lift20"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
