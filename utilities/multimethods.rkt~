#lang racket

(require racket/dict
         functional/point-free)

(define multimethod-heirarchy (make-parameter (make-immutable-hash '())))

(define (dict-dip dict key transformation . otherwise)
  (match otherwise
    [(list) (dict-dip dict key transformation (lambda () (error 'dict-dip "No value associated with ~a in ~a." key dict)))]
    [(list otherwise-value)
     (let ((current-value (dict-ref dict key otherwise-value)))
       (dict-set dict key (transformation current-value)))]))

(define (dict-dip! dict key transformation . otherwise)
  (match otherwise
    [(list) (dict-dip! dict key transformation (lambda () (error 'dict-dip "No value associated with ~a in ~a." key dict)))]
    [(list otherwise-value)
     (let ((current-value (dict-ref dict key otherwise-value)))
       (dict-set! dict key (transformation current-value)))]))


(define (dict-dip-cons dict key val)
  (dict-dip dict key (>partial cons val) '()))

(define (dict-dip-add-to-set dict key val)
  (dict-dip dict key (partial< dict-set val #t) (make-immutable-hash '())))

(define (add-parent-relation child parent . heir)
  (match heir
    [(list) 
     (dict-dip (multimethod-heirarchy) 'parents (lambda (parents)
                            (dict-dip-add-to-set parents parent child))
               (make-immutable-hash '()))]
    [(list alternative-heirarchy)
     (parameterize ([multimethod-heirarchy alternative-heirarchy])
       (add-parent-relation child parent))]))

(define (add-child-relation parent child . heir)
  (match heir 
    [(list)
     (dict-dip (multimethod-heirarchy) 'children (lambda (children)
                                                   (dict-dip-add-to-set children child parent))
               (make-immutable-hash '()))]
    [(list alternative-heirarchy)
     (parameterize [(multimethod-heirachy alternative-heirarchy)]
                  (add-child-relation parent child))]))

(define (derive parent child . heir)
  (match heir
    [(list)
     (add-child-relation parent child) 
     (add-parent-relation child parent)]
    [(list alt-heir)
     (parameterize [(multmethod-heirarchy alt-heir)]
       (derive2 parent child))]))
